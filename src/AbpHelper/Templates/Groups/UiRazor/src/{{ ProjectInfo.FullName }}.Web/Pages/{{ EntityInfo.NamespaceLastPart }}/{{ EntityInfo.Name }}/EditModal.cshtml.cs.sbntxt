{{- if Option.SeparateDto
updateDto = "Update" + EntityInfo.Name + "Dto"
else
updateDto = "CreateUpdate" + EntityInfo.Name + "Dto"
end
-}}
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using {{ ProjectInfo.FullName }}.{{ EntityInfo.NamespaceLastPart }};
using {{ ProjectInfo.FullName }}.{{ EntityInfo.NamespaceLastPart }}.Dtos;

namespace {{ ProjectInfo.FullName }}.Web.Pages.{{ EntityInfo.NamespaceLastPart }}.{{ EntityInfo.Name }}
{
    public class EditModalModel : {{ ProjectInfo.Name }}PageModel
    {
        [HiddenInput]
        [BindProperty(SupportsGet = true)]
        public {{ EntityInfo.PrimaryKey }} Id { get; set; }

        [BindProperty]
        public {{ updateDto }} {{ EntityInfo.Name }} { get; set; }

        private readonly I{{ EntityInfo.Name }}AppService _service;

        public EditModalModel(I{{ EntityInfo.Name }}AppService service)
        {
            _service = service;
        }

        public async Task OnGetAsync()
        {
            var dto = await _service.GetAsync(Id);
            {{ EntityInfo.Name }} = ObjectMapper.Map<{{ EntityInfo.Name }}Dto, {{ updateDto }}>(dto);
        }

        public async Task<IActionResult> OnPostAsync()
        {
            await _service.UpdateAsync(Id, {{ EntityInfo.Name }});
            return NoContent();
        }
    }
}